@inject SharedLocalizationService Localizer
@using Microsoft.AspNetCore.Builder
@using Microsoft.Extensions.Options

@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var cultureItems = LocOptions.Value.SupportedUICultures
                                    .ToList();
}
@section head{
<style>
    .langdata{
        padding:10px;
    }
</style>
}
<nav id="main-nav" class="main-nav">
    <ul class="menu">
        <li class="current-menu-item active"><a asp-controller="Home" asp-action="Index">@Localizer.GetLocalizedHtmlString(RESOURCEKEYS.Home)</a></li>
        <li><a asp-controller="About" asp-action="Index">@Localizer.GetLocalizedHtmlString(RESOURCEKEYS.About)</a></li>
        <li class="menu-item menu-item-has-children">
            <a href="/Services/Index">@Localizer.GetLocalizedHtmlString(RESOURCEKEYS.Services)</a>
            @await Component.InvokeAsync("ServiceMenu")
        </li>

        <li><a asp-controller="Portfolio" asp-action="Index">@Localizer.GetLocalizedHtmlString(RESOURCEKEYS.Portfolio)</a></li>
        <li><a asp-controller="Blog" asp-action="Index">@Localizer.GetLocalizedHtmlString(RESOURCEKEYS.Blog)</a></li>
        <li><a asp-controller="Message" asp-action="Index">@Localizer.GetLocalizedHtmlString(RESOURCEKEYS.Contact)</a></li>

        @foreach (var item in cultureItems)
        {
            <li><a class="datas_item langdata" data-id="@item.Name">
            <input class="contexts" type="hidden"  data-id="@Context.Request.Path" />@item.NativeName.Substring(0, 2).ToUpper()</a></li>
        }
    </ul>
</nav>
<script src="~/ConstructionAdmin/js/jquery-1.8.3.min.js"></script>
<script src="~/customer/js/Language.js"></script>